"use strict";(self.webpackChunkwd_appointments_admin=self.webpackChunkwd_appointments_admin||[]).push([[300],{1300:(e,t,a)=>{a.r(t),a.d(t,{GoogleCalendarService:()=>i});var n=a(7049);class i extends n.IE{constructor(e){super(e),this.tokenClient=null,this.accessToken=null,this.SCOPES=["https://www.googleapis.com/auth/calendar","https://www.googleapis.com/auth/calendar.events"]}async initialize(){window.google||await this.loadGoogleAPI(),this.tokenClient=window.google.accounts.oauth2.initTokenClient({client_id:this.config.clientId,scope:this.SCOPES.join(" "),callback:e=>{if(e.error)throw new n.OE(n.hP.AUTHENTICATION_FAILED,"Failed to authenticate with Google Calendar");this.accessToken=e.access_token}})}async loadGoogleAPI(){return new Promise(((e,t)=>{const a=document.createElement("script");a.src="https://accounts.google.com/gsi/client",a.async=!0,a.defer=!0,a.onload=e,a.onerror=()=>t(new Error("Failed to load Google API")),document.head.appendChild(a)}))}async authenticate(){return this.tokenClient||await this.initialize(),new Promise(((e,t)=>{try{this.tokenClient.requestAccessToken(),e()}catch(a){t(new n.OE(n.hP.AUTHENTICATION_FAILED,"Failed to authenticate with Google Calendar",a))}}))}async disconnect(){this.accessToken&&(window.google.accounts.oauth2.revoke(this.accessToken),this.accessToken=null)}async refreshToken(){this.tokenClient||await this.initialize(),await this.authenticate()}async createEvent(e){try{var t;const a=await this.makeRequest("POST","/calendar/v3/calendars/primary/events",{summary:e.title,description:e.description,start:{dateTime:e.startTime.toISOString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},end:{dateTime:e.endTime.toISOString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},attendees:null===(t=e.attendees)||void 0===t?void 0:t.map((e=>({email:e}))),conferenceData:e.meetingLink?{createRequest:{requestId:Math.random().toString(36).substring(2),conferenceSolutionKey:{type:"hangoutsMeet"}}}:void 0});return this.parseEventData(a)}catch(a){throw this.handleError(a)}}async updateEvent(e,t){try{var a;const n=await this.makeRequest("PUT",`/calendar/v3/calendars/primary/events/${e}`,{summary:t.title,description:t.description,start:{dateTime:t.startTime.toISOString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},end:{dateTime:t.endTime.toISOString(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone},attendees:null===(a=t.attendees)||void 0===a?void 0:a.map((e=>({email:e})))});return this.parseEventData(n)}catch(n){throw this.handleError(n)}}async deleteEvent(e){try{await this.makeRequest("DELETE",`/calendar/v3/calendars/primary/events/${e}`)}catch(t){throw this.handleError(t)}}async getEvent(e){try{const t=await this.makeRequest("GET",`/calendar/v3/calendars/primary/events/${e}`);return this.parseEventData(t)}catch(t){throw this.handleError(t)}}async listEvents(e){try{const t=new URLSearchParams({timeMin:e.startTime.toISOString(),timeMax:e.endTime.toISOString(),singleEvents:!0,orderBy:"startTime"});return(await this.makeRequest("GET",`/calendar/v3/calendars/primary/events?${t.toString()}`)).items.map((e=>this.parseEventData(e)))}catch(t){throw this.handleError(t)}}async getAvailability(e,t){try{return(await this.listEvents({startTime:e,endTime:t})).map((e=>({start:new Date(e.start.dateTime||e.start.date),end:new Date(e.end.dateTime||e.end.date)})))}catch(a){throw this.handleError(a)}}isAuthenticated(){return!!this.accessToken}formatEventData(e){const t=new Date(e.appointmentDate),a=new Date(t.getTime()+6e4*e.duration);return{title:`Appointment with ${e.clientName}`,description:`Booking: ${e.formTitle}\nClient: ${e.clientName}\nEmail: ${e.clientEmail}`,startTime:t,endTime:a,attendees:[e.clientEmail],meetingLink:"google_meet"===e.meetingType}}parseEventData(e){var t,a,n,i;return{id:e.id,title:e.summary,description:e.description,startTime:new Date(e.start.dateTime||e.start.date),endTime:new Date(e.end.dateTime||e.end.date),meetingLink:null===(t=e.conferenceData)||void 0===t||null===(a=t.entryPoints)||void 0===a||null===(n=a[0])||void 0===n?void 0:n.uri,attendees:(null===(i=e.attendees)||void 0===i?void 0:i.map((e=>e.email)))||[]}}async makeRequest(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(!this.accessToken)throw new n.OE(n.hP.AUTHENTICATION_FAILED,"Not authenticated with Google Calendar");try{const n=await fetch(`https://www.googleapis.com${t}`,{method:e,headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:a?JSON.stringify(a):void 0});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);if("DELETE"!==e)return await n.json()}catch(i){throw this.handleError(i)}}handleError(e){return e instanceof n.OE?e:401===e.status?new n.OE(n.hP.TOKEN_EXPIRED,"Google Calendar token expired"):403===e.status?new n.OE(n.hP.PERMISSION_DENIED,"Permission denied for Google Calendar"):404===e.status?new n.OE(n.hP.EVENT_NOT_FOUND,"Calendar event not found"):new n.OE(n.hP.UNKNOWN_ERROR,"An error occurred with Google Calendar",e)}}}}]);
//# sourceMappingURL=300.43eb65f7.chunk.js.map