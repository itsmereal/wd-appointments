{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import{settingsAPI}from'../services/api';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={settings:null,loading:false,error:null,notifications:[]};// Action types\nconst ActionTypes={SET_SETTINGS:'SET_SETTINGS',SET_LOADING:'SET_LOADING',SET_ERROR:'SET_ERROR',ADD_NOTIFICATION:'ADD_NOTIFICATION',REMOVE_NOTIFICATION:'REMOVE_NOTIFICATION'};// Reducer\nfunction reducer(state,action){switch(action.type){case ActionTypes.SET_SETTINGS:return{...state,settings:action.payload,error:null};case ActionTypes.SET_LOADING:return{...state,loading:action.payload};case ActionTypes.SET_ERROR:return{...state,error:action.payload,loading:false};case ActionTypes.ADD_NOTIFICATION:return{...state,notifications:[...state.notifications,action.payload]};case ActionTypes.REMOVE_NOTIFICATION:return{...state,notifications:state.notifications.filter(notification=>notification.id!==action.payload)};default:return state;}}// Create context\nconst AppContext=/*#__PURE__*/createContext();// Context provider component\nexport function AppProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(reducer,initialState);const showNotification=(severity,message)=>{const id=Date.now();dispatch({type:ActionTypes.ADD_NOTIFICATION,payload:{id,severity,message}});setTimeout(()=>{dispatch({type:ActionTypes.REMOVE_NOTIFICATION,payload:id});},5000);};const loadSettings=async()=>{dispatch({type:ActionTypes.SET_LOADING,payload:true});try{const settings=await settingsAPI.getSettings();dispatch({type:ActionTypes.SET_SETTINGS,payload:settings});}catch(error){dispatch({type:ActionTypes.SET_ERROR,payload:error.message});showNotification('error','Failed to load settings');}dispatch({type:ActionTypes.SET_LOADING,payload:false});};const updateSettings=async newSettings=>{dispatch({type:ActionTypes.SET_LOADING,payload:true});try{const updated=await settingsAPI.updateSettings(newSettings);dispatch({type:ActionTypes.SET_SETTINGS,payload:updated});showNotification('success','Settings updated successfully');}catch(error){dispatch({type:ActionTypes.SET_ERROR,payload:error.message});showNotification('error','Failed to update settings');}dispatch({type:ActionTypes.SET_LOADING,payload:false});};// Load settings on mount\nuseEffect(()=>{loadSettings();},[]);// Context value\nconst value={...state,updateSettings,showNotification};return/*#__PURE__*/_jsx(AppContext.Provider,{value:value,children:children});}// Custom hook to use the context\nexport function useApp(){const context=useContext(AppContext);if(context===undefined){throw new Error('useApp must be used within an AppProvider');}return context;}export default AppContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","settingsAPI","jsx","_jsx","initialState","settings","loading","error","notifications","ActionTypes","SET_SETTINGS","SET_LOADING","SET_ERROR","ADD_NOTIFICATION","REMOVE_NOTIFICATION","reducer","state","action","type","payload","filter","notification","id","AppContext","AppProvider","_ref","children","dispatch","showNotification","severity","message","Date","now","setTimeout","loadSettings","getSettings","updateSettings","newSettings","updated","value","Provider","useApp","context","undefined","Error"],"sources":["/Users/real/Local Sites/wdbooking/app/public/wp-content/plugins/wd-appointments/admin/react-app/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { settingsAPI } from '../services/api';\n\n// Initial state\nconst initialState = {\n  settings: null,\n  loading: false,\n  error: null,\n  notifications: [],\n};\n\n// Action types\nconst ActionTypes = {\n  SET_SETTINGS: 'SET_SETTINGS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n};\n\n// Reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ActionTypes.SET_SETTINGS:\n      return {\n        ...state,\n        settings: action.payload,\n        error: null,\n      };\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case ActionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case ActionTypes.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload],\n      };\n    case ActionTypes.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          (notification) => notification.id !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\n// Create context\nconst AppContext = createContext();\n\n// Context provider component\nexport function AppProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const showNotification = (severity, message) => {\n    const id = Date.now();\n    dispatch({\n      type: ActionTypes.ADD_NOTIFICATION,\n      payload: {\n        id,\n        severity,\n        message,\n      },\n    });\n    setTimeout(() => {\n      dispatch({ type: ActionTypes.REMOVE_NOTIFICATION, payload: id });\n    }, 5000);\n  };\n\n  const loadSettings = async () => {\n    dispatch({ type: ActionTypes.SET_LOADING, payload: true });\n    try {\n      const settings = await settingsAPI.getSettings();\n      dispatch({ type: ActionTypes.SET_SETTINGS, payload: settings });\n    } catch (error) {\n      dispatch({ type: ActionTypes.SET_ERROR, payload: error.message });\n      showNotification('error', 'Failed to load settings');\n    }\n    dispatch({ type: ActionTypes.SET_LOADING, payload: false });\n  };\n\n  const updateSettings = async (newSettings) => {\n    dispatch({ type: ActionTypes.SET_LOADING, payload: true });\n    try {\n      const updated = await settingsAPI.updateSettings(newSettings);\n      dispatch({ type: ActionTypes.SET_SETTINGS, payload: updated });\n      showNotification('success', 'Settings updated successfully');\n    } catch (error) {\n      dispatch({ type: ActionTypes.SET_ERROR, payload: error.message });\n      showNotification('error', 'Failed to update settings');\n    }\n    dispatch({ type: ActionTypes.SET_LOADING, payload: false });\n  };\n\n  // Load settings on mount\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  // Context value\n  const value = {\n    ...state,\n    updateSettings,\n    showNotification,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n}\n\n// Custom hook to use the context\nexport function useApp() {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n\nexport default AppContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}